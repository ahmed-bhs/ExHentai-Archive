<?php
namespace App\Tests\Command;

use App\Command\ExhentaiApiGalleryCommand;
use App\Entity\ExhentaiCategory;
use App\Entity\ExhentaiGallery;
use App\Service\ExHentaiBrowserService;
use PHPUnit\Framework\MockObject\MockObject;
use Symfony\Bundle\FrameworkBundle\Console\Application;
use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;
use Symfony\Component\Console\Tester\CommandTester;

class ExhentaiApiGalleryCommandTest extends KernelTestCase
{
    /**
     * @var MockObject|ExHentaiBrowserService
     */
    private $browser;

    /**
     * @var CommandTester
     */
    private $commandTester;

    protected function setUp()
    {

        $this->browser = $this->getMockBuilder(ExHentaiBrowserService::class)
            ->disableOriginalConstructor()
            ->getMock();

        $kernel = self::bootKernel();
        $application = new Application($kernel);
        $application->add(new ExhentaiApiGalleryCommand(ExhentaiApiGalleryCommand::$defaultName, $this->browser));

        $command = $application->find(ExhentaiApiGalleryCommand::$defaultName);
        $this->commandTester = new CommandTester($command);

        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * @test
     */
    public function willSearchForQuery()
    {
        $this->browser->expects($this->once())
            ->method('searchRemote')
            ->willReturn([
                (new ExhentaiGallery())->setCategory((new ExhentaiCategory())->setTitle('CategoryTitle'))->setTitle('GalleryTitle')
            ]);

        $this->commandTester->execute([
            'command' => ExhentaiApiGalleryCommand::$defaultName,
            'query'   => 'testQuery'
        ]);

        $this->assertContains('CategoryTitle', $this->commandTester->getDisplay());
        $this->assertContains('GalleryTitle', $this->commandTester->getDisplay());
        $this->assertEquals(0, $this->commandTester->getStatusCode());
    }

    public function willExitWithExitCode1IfNoGalleriesAreFound()
    {
        $this->browser->expects($this->once())
            ->method('searchRemote');

        $this->commandTester->execute([
            'command' => ExhentaiApiGalleryCommand::$defaultName,
            'query'   => 'testQuery'
        ]);

        $this->assertEquals(1, $this->commandTester->getStatusCode());
    }
}
