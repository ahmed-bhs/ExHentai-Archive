<?php declare(strict_types=1);

namespace DoctrineMigrations;

use App\Model\GalleryToken;
use Doctrine\DBAL\FetchMode;
use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Component\DependencyInjection\ContainerAwareInterface;
use Symfony\Component\DependencyInjection\ContainerAwareTrait;

/**
 * Auto-generated Migration: Please modify to your needs!
 */
final class Version20180907193346 extends AbstractMigration implements ContainerAwareInterface
{
    use ContainerAwareTrait;

    public function up(Schema $schema) : void
    {
        // this up() migration is auto-generated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform() !== 'mysql', 'MySQL is currently the only sypported platform');

        // Migrate Tag namespaces
        $this->addSql('INSERT INTO exhentai_tag_namespace (name) SELECT name FROM tagnamespace');
        // Migrate Tags
        $this->addSql('INSERT INTO exhentai_tag (namespace_id, name) SELECT etn.id as newnamespaceid, t.`name` as `name` FROM gallery_tag gt INNER JOIN tag t on gt.tag_id = t.id INNER JOIN tagnamespace tn on gt.namespace_id = tn.id INNER JOIN exhentai_tag_namespace etn ON etn.`name` = tn.`name` GROUP BY name');
        // Insert available categories (see wiki->API)
        $this->addSql('INSERT INTO exhentai_category (title, oldname) VALUES ("Doujinshi","doujinshi"),("Manga","manga"),("Artist CG Sets","artistcg"),("Game CG Sets","gamecg"),("Western","western"),("Image Sets","imageset"),("Non-H","non-h"),("Cosplay","cosplay"),("Asian Porn","asianporn"),("Misc","misc"),("Private","private")');
    }

    public function postUp(Schema $schema) : void
    {
        $dbConn = $this->container->get('database_connection');
        // Archived
        $query = $dbConn->query('SELECT exhenid, hash FROM gallery WHERE archived = 1 AND download = 1');
        $query->execute();
        $this->processGallerySet($query->fetchAll(FetchMode::ASSOCIATIVE),2);

        // Queued
        $query = $dbConn->query('SELECT exhenid, hash FROM gallery where (archived = 0 and download = 1) or hasmeta = 0');
        $query->execute();
        $this->processGallerySet($query->fetchAll(FetchMode::ASSOCIATIVE),0);

        parent::postUp($schema); // TODO: Change the autogenerated stub
    }

    private function processGallerySet(array $tokens, int $downloadState)
    {
        $converted = array_map(function($item) {
            return new GalleryToken($item['exhenid'], $item['hash']);
        }, $tokens);

        $this->getContainer()->get('exhentai.client')->getGalleries($converted);
    }

    public function down(Schema $schema) : void
    {
        // this down() migration is auto-generated, please modify it to your needs

    }
}
